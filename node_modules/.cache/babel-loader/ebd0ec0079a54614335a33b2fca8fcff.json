{"ast":null,"code":"// In case you need to use a selector\n// import also select from redux-saga/effects\n// and then simplie yield select(yourSelector())\nimport { put, call, takeLatest, all } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ITEM } from '../actions/types';\nimport { item } from '../actions';\n\nfunction* handleGet() {\n  try {\n    const {\n      data\n    } = yield call(axios.get, 'https://jsonplaceholder.typicode.com/posts/');\n    yield put(item.success({\n      data\n    }));\n  } catch (e) {\n    yield put(item.failure({\n      error: { ...e\n      }\n    }));\n  }\n}\n\nfunction* handleGetOne(action) {\n  try {\n    const {\n      id\n    } = action.payload;\n    const {\n      data\n    } = yield call(axios.get, `https://jsonplaceholder.typicode.com/posts/${id}`);\n    yield put(item.success({\n      data\n    }));\n  } catch (e) {\n    yield put(item.failure({\n      error: { ...e\n      }\n    }));\n  }\n}\n\nfunction* handlePost(action) {\n  try {\n    const {\n      saveData\n    } = action.payload;\n    const {\n      data\n    } = yield call(axios.post, 'https://jsonplaceholder.typicode.com/posts/', {\n      saveData\n    });\n    yield put(item.success({\n      data\n    }));\n  } catch (e) {\n    yield put(item.failure({\n      error: { ...e\n      }\n    }));\n  }\n}\n\nfunction* handlePut(action) {\n  try {\n    const {\n      id,\n      updateData\n    } = action.payload;\n    const {\n      data\n    } = yield call(axios.put, `https://jsonplaceholder.typicode.com/posts/${id}`, {\n      updateData\n    });\n    yield put(item.success({\n      data\n    }));\n  } catch (e) {\n    yield put(item.failure({\n      error: { ...e\n      }\n    }));\n  }\n}\n\nfunction* handlePatch(action) {\n  try {\n    const {\n      id,\n      updateData\n    } = action.payload;\n    const {\n      data\n    } = yield call(axios.patch, `https://jsonplaceholder.typicode.com/posts/${id}`, {\n      updateData\n    });\n    yield put(item.success({\n      data\n    }));\n  } catch (e) {\n    yield put(item.failure({\n      error: { ...e\n      }\n    }));\n  }\n}\n\nfunction* handleDelete(action) {\n  try {\n    const {\n      id\n    } = action.payload;\n    const {\n      data\n    } = yield call(axios.delete, `https://jsonplaceholder.typicode.com/posts/${id}`);\n    yield put(item.success({\n      data\n    }));\n  } catch (e) {\n    yield put(item.failure({\n      error: { ...e\n      }\n    }));\n  }\n}\n\nfunction* watchExampleSagas() {\n  yield all([takeLatest(ITEM.GET, handleGet), takeLatest(ITEM.GET_ONE, handleGetOne), takeLatest(ITEM.SAVE, handlePost), takeLatest(ITEM.PUT, handlePut), takeLatest(ITEM.PATCH, handlePatch), takeLatest(ITEM.DELETE, handleDelete)]);\n}\n\nexport default watchExampleSagas;","map":{"version":3,"sources":["/Users/arnau/git/cm/src/sagas/exampleSagas.js"],"names":["put","call","takeLatest","all","axios","ITEM","item","handleGet","data","get","success","e","failure","error","handleGetOne","action","id","payload","handlePost","saveData","post","handlePut","updateData","handlePatch","patch","handleDelete","delete","watchExampleSagas","GET","GET_ONE","SAVE","PUT","PATCH","DELETE"],"mappings":"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","sourcesContent":["// In case you need to use a selector\n// import also select from redux-saga/effects\n// and then simplie yield select(yourSelector())\n\nimport {\n  put, call, takeLatest, all,\n} from 'redux-saga/effects'\nimport axios from 'axios'\n\nimport { ITEM } from '../actions/types'\n\nimport { item } from '../actions'\n\nfunction* handleGet() {\n  try {\n    const { data } = yield call(axios.get, 'https://jsonplaceholder.typicode.com/posts/')\n    yield put(item.success({ data }))\n  } catch (e) {\n    yield put(item.failure({ error: { ...e } }))\n  }\n}\n\nfunction* handleGetOne(action) {\n  try {\n    const { id } = action.payload\n    const { data } = yield call(axios.get, `https://jsonplaceholder.typicode.com/posts/${id}`)\n    yield put(item.success({ data }))\n  } catch (e) {\n    yield put(item.failure({ error: { ...e } }))\n  }\n}\n\nfunction* handlePost(action) {\n  try {\n    const { saveData } = action.payload\n    const { data } = yield call(axios.post, 'https://jsonplaceholder.typicode.com/posts/', { saveData })\n    yield put(item.success({ data }))\n  } catch (e) {\n    yield put(item.failure({ error: { ...e } }))\n  }\n}\n\nfunction* handlePut(action) {\n  try {\n    const { id, updateData } = action.payload\n    const { data } = yield call(axios.put, `https://jsonplaceholder.typicode.com/posts/${id}`, { updateData })\n    yield put(item.success({ data }))\n  } catch (e) {\n    yield put(item.failure({ error: { ...e } }))\n  }\n}\n\nfunction* handlePatch(action) {\n  try {\n    const { id, updateData } = action.payload\n    const { data } = yield call(axios.patch, `https://jsonplaceholder.typicode.com/posts/${id}`, { updateData })\n    yield put(item.success({ data }))\n  } catch (e) {\n    yield put(item.failure({ error: { ...e } }))\n  }\n}\n\nfunction* handleDelete(action) {\n  try {\n    const { id } = action.payload\n    const { data } = yield call(axios.delete, `https://jsonplaceholder.typicode.com/posts/${id}`)\n    yield put(item.success({ data }))\n  } catch (e) {\n    yield put(item.failure({ error: { ...e } }))\n  }\n}\n\nfunction* watchExampleSagas() {\n  yield all([\n    takeLatest(ITEM.GET, handleGet),\n    takeLatest(ITEM.GET_ONE, handleGetOne),\n    takeLatest(ITEM.SAVE, handlePost),\n    takeLatest(ITEM.PUT, handlePut),\n    takeLatest(ITEM.PATCH, handlePatch),\n    takeLatest(ITEM.DELETE, handleDelete),\n  ])\n}\n\nexport default watchExampleSagas\n"]},"metadata":{},"sourceType":"module"}