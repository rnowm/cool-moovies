{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/arnau/git/cm/src/hocs/WithErrors.js\";\nimport React, { Component, Fragment } from 'react';\nexport const WithErrors = WrappedComponent => {\n  var _temp;\n\n  return _temp = class ErrorBoundary extends Component {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        error: null,\n        errorInfo: null\n      };\n    }\n\n    componentDidCatch(error, errorInfo) {\n      this.setState({\n        error,\n        errorInfo\n      });\n    }\n\n    render() {\n      const {\n        error,\n        errorInfo\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: error ? /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Something went wrong.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"details\", {\n            style: {\n              whiteSpace: 'pre-wrap'\n            },\n            children: [error.toString(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 21\n            }, this), errorInfo.componentStack]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(WrappedComponent, { ...this.props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this);\n    }\n\n  }, _temp;\n};\n_c = WithErrors;\n\nvar _c;\n\n$RefreshReg$(_c, \"WithErrors\");","map":{"version":3,"sources":["/Users/arnau/git/cm/src/hocs/WithErrors.js"],"names":["React","Component","Fragment","WithErrors","WrappedComponent","ErrorBoundary","state","error","errorInfo","componentDidCatch","setState","render","whiteSpace","toString","componentStack","props"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAO,MAAMC,UAAU,GAAGC,gBAAgB;AAAA;;AAAA,iBAAI,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AAAA;AAAA;AAAA,WAChFK,KADgF,GACxE;AACNC,QAAAA,KAAK,EAAE,IADD;AAENC,QAAAA,SAAS,EAAE;AAFL,OADwE;AAAA;;AAMhFC,IAAAA,iBAAiB,CAACF,KAAD,EAAQC,SAAR,EAAmB;AAClC,WAAKE,QAAL,CAAc;AACZH,QAAAA,KADY;AAEZC,QAAAA;AAFY,OAAd;AAID;;AAEDG,IAAAA,MAAM,GAAG;AACP,YAAM;AAAEJ,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAuB,KAAKF,KAAlC;AAEA,0BACE,QAAC,QAAD;AAAA,kBAEIC,KAAK,gBAED,QAAC,QAAD;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAS,YAAA,KAAK,EAAE;AAAEK,cAAAA,UAAU,EAAE;AAAd,aAAhB;AAAA,uBACGL,KAAK,CAACM,QAAN,EADH,eAEE;AAAA;AAAA;AAAA;AAAA,oBAFF,EAGGL,SAAS,CAACM,cAHb;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFC,gBAWD,QAAC,gBAAD,OAAsB,KAAKC;AAA3B;AAAA;AAAA;AAAA;AAAA;AAbR;AAAA;AAAA;AAAA;AAAA,cADF;AAkBD;;AAlC+E,GAA1C;AAAA,CAAnC;KAAMZ,U","sourcesContent":["import React, { Component, Fragment } from 'react'\n\nexport const WithErrors = WrappedComponent => class ErrorBoundary extends Component {\n    state = {\n      error: null,\n      errorInfo: null,\n    }\n\n    componentDidCatch(error, errorInfo) {\n      this.setState({\n        error,\n        errorInfo,\n      })\n    }\n\n    render() {\n      const { error, errorInfo } = this.state\n\n      return (\n        <Fragment>\n          {\n            error\n              ? (\n                <Fragment>\n                  <h2>Something went wrong.</h2>\n                  <details style={{ whiteSpace: 'pre-wrap' }}>\n                    {error.toString()}\n                    <br />\n                    {errorInfo.componentStack}\n                  </details>\n                </Fragment>\n              )\n              : <WrappedComponent {...this.props} />\n          }\n        </Fragment>\n      )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}